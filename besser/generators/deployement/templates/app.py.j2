/**
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

# [START gke_quickstart_autopilot_app]
{% set ns = namespace(gcp=false, aws=false) %}
{% if (public_cluster.provider | class_name) == 'GCP' %}
    {% set ns.gcp = true %}
{% elif (public_cluster.provider | class_name) == 'AWS' %}
    {% set ns.aws = true %}
{% endif %}

{% if ns.gcp %}
data "google_client_config" "default" {}


provider "kubernetes" {
  host                   = "https://${google_container_cluster.default.endpoint}"
  token                  = data.google_client_config.default.access_token
  cluster_ca_certificate = base64decode(google_container_cluster.default.master_auth[0].cluster_ca_certificate)

  ignore_annotations = [
    "^autopilot\\.gke\\.io\\/.*",
    "^cloud\\.google\\.com\\/.*"
  ]
}
{% endif %}

{% set default_dep = 1 %}
{% for dep in public_cluster.deployments%}
resource "kubernetes_deployment_v1" "default-{{default_net}}" {
  {% set default_dep = default_dep + 1 %}
  metadata {
    name = "{{dep.name}}" 
    labels = {
      app = "{#{{dep.containers[0].application.name}}#}"   ##CHANGE THIS
    }
  }

  spec {
    replicas = 1

    selector {
      match_labels = {
        app = "{#{{dep.containers[0].application.name}}#}"   ##CHANGE THIS
      }
    }

    template {
      metadata {
        labels = {
          app = "{#{{dep.containers[0].application.name}}#}"   ##CHANGE THIS
        }
      }

      spec {
        {%for container in dep.containers%}
        container {
          image = "{{container.application.image_repo}}"
          name  = "{{container.name}}"

          resources {
            limits = {
              cpu    = "{{container.resources_limit.cpu}}"
              memory = "{{container.resources_limit.memory}}Mi"
            }
            requests = {
              cpu    = "{{container.application.required_resources.cpu}}m"
              memory = "{{container.application.required_resources.memory}}Mi"
            }
          }
        }
        {%endfor%}
      }
    }
  }
}
{%endfor%}

{% set default_service = 1 %}
{% for service in public_cluster.services%}
resource "kubernetes_service_v1" "default-{{default_service}}" {
  {% set default_service = default_service + 1 %}
  metadata {
    name = "{{service.name}}"
  }

  spec {
    selector = {
      app = "{{service.application.name}}"
    }
    port {
      port        = 80
      target_port = 8000
    }

    type = "{{service.type | to_str}}"
  }

  depends_on = [time_sleep.wait_service_cleanup]
}
{%endfor%}


# Provide time for Service cleanup
resource "time_sleep" "wait_service_cleanup" {
  depends_on = [google_container_cluster.default]

  destroy_duration = "180s"
}
# [END gke_quickstart_autopilot_app]
